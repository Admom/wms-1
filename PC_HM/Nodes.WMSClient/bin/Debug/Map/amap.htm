<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no, width=device-width">
    <title>Nodes 地图排序</title>
    <link rel="stylesheet" href="http://cache.amap.com/lbs/static/main1119.css" />
    <script src="jquery-1.4.1.min.js" type="text/javascript"></script>
    <script src="http://cache.amap.com/lbs/static/es5.min.js"></script>
    <script type="text/javascript" src="http://webapi.amap.com/maps?v=1.3&key=7b2187ba9f9254b1aa5fa057e737baef&&plugin=AMap.Scale,AMap.OverView,AMap.ToolBar"></script>
    <!--<script type="text/javascript" src="http://cache.amap.com/lbs/static/addToolbar.js"></script>-->
    <style type="text/css">
        #mainContainer { min-width: 750px; height: 100%; clear: both; }
        #amapContainer, #sort_list { float: left; }
        #amapContainer { min-width: 300px; width: 70%; height: 100%; min-height: 400px; }
        #sort_list { min-width: 200px; width: 30%; min-height: 450px; height: 100%; overflow: auto; }
        #sort_list ul { margin: 0px; padding: 0px; }
        #sort_list li { list-style: none; margin: 0px; padding: 0px; padding-left: 20px; line-height: 30px; font-size: 12px; }
        .btnRemoveItem { display: inline-block; color: Red; width: 20px; line-height: 20px; text-decoration: none; text-align: center; }
        .listItem { display: inline-block; min-width: 160px; width: 80%; display: inline-block; }
        .sort_list li:hover { background: #7c9eff; color: White; cursor: pointer; }
        .sort_item { display: inline-block; padding-right: 5px; color: Gray; vertical-align: top; }
    </style>
</head>
<body>
    <div id="mainContainer">
        <div id="amapContainer">
        </div>
        <div id="sort_list">
            <h4>
                累计件数：<span class="total_qty" style="color: Red;">0</span>&nbsp;件</h4>
            <h4>
                累计单量：<span class="total_bill_qty" style="color: Red;">0</span>&nbsp;单</h4>
            <ul class="sort_list">
            </ul>
            <button onclick="submit()" style="display: none;">
                提交</button>
        </div>
    </div>
    <script type="text/javascript">
        var jsonData;
        var totalQty = 0, totalBillQty = 0;
        var marker, infoWindow, scale, toolBar, overView, map;
        var markerList = [];
        /*
        *  鼠标划过客户名称时改变光标样式
        */
        function blockMouseMove(e) {
            e.style.cursor = "hand";
        }
        /*
        * 将指定项从右侧排序列表中移除
        */
        function removeItem(e) {
            // 从列表中移除
            var obj = $('li[orderId=' + e + ']');
            if (!obj) return;
            $(obj).remove();
            // 更新序号
            $('.sort_list span[class="sort_item"]').each(function (i) {
                $(this).text((i + 1) + '.');
            });
//            var m = getMarker(e);
//            if (m) {
//                m.setMap(map);
//                map.setFitView();
            //            }
            changeMarkerStyle(e, 0);
            setTotalQty(totalQty - parseInt($(obj).attr('qty')));
            changeTotalBillQty(-1);
        }
        /*
        * 更新总件数（并更新界面显示）
        */
        function setTotalQty(qty) {
            totalQty = qty;
            $('.total_qty').text(qty);
        }
        function changeTotalBillQty(qty) {
            totalBillQty += qty;
            $('.total_bill_qty').text(totalBillQty);
        }
        /*
        * 根据订单ID在地图中找到对应的标注
        */
        function getMarker(orderId) {
            var result;
            for (var i = 0; i < markerList.length; i++) {
                var temp = markerList[i];
                if (orderId === temp.orderId) {
                    result = temp;
                    break;
                }
            }
            return result;
        }
        /*
        * 根据订单ID将指定标注从地图上移除
        */
        function removeMarker(orderId) {
            if (!markerList || markerList.length == 0)
                return;
            // 首先从集合中找到对应的 marker
            var curMarker = getMarker(orderId);
            if (!curMarker) return;
            map.remove(curMarker);
            //map.setFitView();
        }
        /*
         * 根据订单ID修改指定标注样式
         */
        function changeMarkerStyle(orderId, style) {
            if (!markerList || markerList.length == 0)
                return;
            // 首先从集合中找到对应的 marker
            var curMarker = getMarker(orderId);
            if (!curMarker) return;
            var obj = $('div[id="' + orderId + '"]').parent();
            if (style === 0) {
                obj.css('background', 'white');
                obj.css('color', 'black');
            } else {
                obj.css('background', '#cccccc');
                obj.css('color', 'white');
            }
        }
        /*
        * 将点击标注对应的订单信息添加到右侧排序列表中
        */
        function addItem(e) {
            if (jsonData && jsonData.length > 0) {
                var data;
                // 找到点击的对象
                for (var i = 0; i < jsonData.length; i++) {
                    var obj = jsonData[i];
                    if (obj.orderId === e.id) {
                        data = obj;
                        break;
                    }
                }
                if (!data)
                    return;
                // 判断该对象在列表中是否已经存在
                var exist = false;
                $('.sort_list').children('li').each(function (i) {
                    if ($(this).attr('orderId') === data.orderId)
                        exist = true;
                });
                if (exist) return;
                // 将点击的对象添加到右侧排序列表中
                var sort = $('.sort_list').children('li').length + 1;
                var data_html = "<li orderId='" + data.orderId + "' qty='" + data.boxNum + "'>";
                data_html += "<span class='sort_item'>" + sort + ".</span>"
                data_html += "<span class='listItem'>" + data.marketName + "(" + data.boxNum + ")" + "</span>";
                data_html += "<a href='javascript:removeItem(\"" + data.orderId + "\");' class='btnRemoveItem'>X</a>";
                data_html += "</li>";
                $('.sort_list').append(data_html);
                //removeMarker(data.orderId);
                changeMarkerStyle(data.orderId, 1);
                // 更新总件数
                setTotalQty(totalQty + parseInt(data.boxNum));
                changeTotalBillQty(1);
            }
        }
        /*
        * 将排序信息转换为 JSON 字段串并返回
        */
        function submit() {
            var sortData = getSortObject();
            var json = JSON.stringify(sortData);
            //alert(json);
            // 清除数据
            release();
            return json;
        }
        /*
        * 还原为初始设置，尽量手动刷新页面
        */
        function release() {
            setTotalQty(0);
            jsonData = null;
            markerList = [];
            $('.sort_list').empty();
        }
        /*
         * 获取排序对象集合
         */
        function getSortObject() {
            var sortObj = [];
            var list = $('.sort_list').children('li');
            if (list && list.length > 0) {
                for (var i = 0; i < list.length; i++) {
                    var orderId = $(list[i]).attr('orderId');
                    for (var j = 0; j < jsonData.length; j++) {
                        var obj = jsonData[j];
                        if (orderId === obj.orderId) {
                            obj.paixu = (i + 1);
                            sortObj.push(obj);
                            break;
                        }
                    }
                }
            }
            return sortObj;
        }
        /*
         * 根据提供的数据初始化地图，并在地图中显示
         */
        function initMap(jsonStr) {
            //jsonStr = "[{ \"orderId\": \"PC0063859063022031079\", \"marketName\": \"世纪家家福超市\", \"marketAddress\": \"通州区宋庄镇徐辛庄村（通顺路徐辛庄加油站右拐300米路北）\", \"lat\": \"39.993029\", \"lng\": \"116.703958\", \"boxNum\": \"14\" }, { \"orderId\": \"PC0158555063021521005\", \"marketName\": \"烟店\", \"marketAddress\": \"朝阳区.王四营乡，双合家园c区5号楼1单元106室\", \"lat\": \"39.863301\", \"lng\": \"116.524526\", \"boxNum\": \"4\"}]";
            jsonData = eval(jsonStr);
            scale = new AMap.Scale({
                visible: true
            });  // 比例尺
            toolBar = new AMap.ToolBar({
                visible: true
            });  // 工具栏
            overView = new AMap.OverView({
                visible: true
            });  // 缩放工具
            map = new AMap.Map('amapContainer', {
                resizeEnable: true,
                zoom: 11
            });
            map.addControl(scale);
            map.addControl(toolBar);
            map.addControl(overView);
            //map.setCity('北京市'); // 设置中心城市

            if (jsonData) {
                infoWindow = new AMap.InfoWindow({ offset: new AMap.Pixel(0, -30) });

                for (var i = 0; i < jsonData.length; i++) {
                    var obj = jsonData[i];
                    marker = new AMap.Marker({
                        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
                        position: [obj.lng, obj.lat],
                        title: obj.marketAddress,
                        topWhenClick: true,              // 点击时置顶
                        animation: "AMAP_ANIMATION_DROP" // 动画效果
                    });
                    // label默认蓝框白底左上角显示，样式className为：amap-marker-label
                    marker.setLabel({
                        offset: new AMap.Pixel(20, 20), //修改label相对于maker的位置
                        content: "<div onmousemove='blockMouseMove(this)' onclick='addItem(this)' id='" + obj.orderId + "'>" + obj.marketName + "</div>"
                    });
                    var content = "<strong>" + obj.marketName + "(" + obj.boxNum + "件)</strong>";
                    content += "<br />地址：" + obj.marketAddress;
                    marker.content = content;
                    marker.orderId = obj.orderId;
                    marker.on('mouseover', function (e) {
                        infoWindow.setContent(e.target.content);
                        infoWindow.open(map, e.target.getPosition());
                    });
                    marker.on('mouseout', function (e) {
                        infoWindow.close();
                    });
                    //marker.emit('click', { target: marker });
                    marker.setMap(map);
                    markerList.push(marker);
                }
                map.setFitView();
            }
        }
        //initMap(null);
    </script>
</body>
</html>
